import time

time.sleep(1)
print ("|" * 1)
print ("")
print ("""Что выведет данная строка?
>>>'1'+'2'

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "'12'":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print("""
>>>'spam' * 3
'spam spam spam'
>>> 'a' + 'b'
'ab'
>>>'a'+'-'+'a'+'-'+'a'
a-a-a
Эта штука называется Конкатенация строк — операция присоединения, «склеивания» символов или их наборов.
Операция конкатенации строк возможна не только с помощью оператора *, но и с помощью
оператора +. Также их можно использовать вместе. Это всё из-за ковычек. Вообще пользуйся
helpом чаще.""")
        print("")
        print ("""Что выведет данная строка?
>>>'1'+'2'""")
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))
    
time.sleep(1)
print ("|" * 2)
print ("")
print ("""Python-ну в строке нужны разные ковычки, что я имею ввиду
Вот так не Работает:

>>> "Хотим двойные кавычки! Python, выведи "Москва". Пожалуйста!"
SyntaxError: invalid syntax

А так работает:

>>> 'Москва не подсвечивается зеленым цветом. А это значит, что Python видит только строки между одинарными кавычками или между двойными. "Попробуем совместить"'
'Москва не подсвечивается зеленым цветом. А это значит,
что Python видит только строки между одинарными кавычками или между двойными. "Попробуем совместить"'

>>> "Получилось! А если 'внутри' предложения взять одинарные кавычки, а снаружи - двойные?"
"Получилось! А если 'внутри' предложения взять одинарные
кавычки, а снаружи - двойные?"

Так не работает:

>>> 'А если все одинарные'?':'
SyntaxError: invalid syntax

Чтобы продолжить введи комманду: next

Для справки введи комманду: help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == 'next':
        print("поехали дальше")
        break
    if answer_1 == 'help':
        print("""Тут ничего нет)))
""")
        print("")
        print ("""Напиши next""")
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Напиши next")
        answer_1 = str(input("Enter your answer: "))

time.sleep(1)
print ("|" * 3)
print ("")
print ("""Какую переменную нужно вставить в функцию print(...), чтобы появилась надпись Hello gnome?:
a = input("Enter your answer: Hello gnome")
print(...)

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "a":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print("""функция input() ожидает ввода данных с клавиатуры после
комментария для пользователя до нажатия клавиши Enter,
причем все данные записываются как строка символов (это
очень важно!)""")
        print("")
        print ("""Какую переменную нужно вставить в функцию print(...), чтобы появилась надпись Hello gnome?:
a = input("Enter your answer: Hello gnome")
print(...)

Для справки введи комманду:help """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 4)
print ("")
print ("""Какой из представленных значение можно вывести с помощmю этого кода,
a = int(input("Enter your age: "))
Значения:
18
ф
f
KUY

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "18":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" функция int() преобразует строку, введенную с клавиатуры,
в целое число """)
        print("")
        print ("""Какой из представленных значение можно вывести с помощmю этого кода,
a = int(input("Enter yout age: "))
Значение
18
ф
f
KUY

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))
    
time.sleep(1)
print ("|" * 5)
print ("")
print ("""Какой из представленных значение можно вывести с помощmю этого кода,
a = float(input("Enter your age: "))
Значения:
1.8
ф
f
KUY

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "1.8":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" функция float() преобразует строку, введенную с клавиатуры,
в дробное число """)
        print("")
        print ("""Какой из представленных значение можно вывести с помощmю этого кода,
a = float(input("Enter yout age: "))
Значение
1.8
ф
f
KUY

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 6)
print ("")
print ("""Напиши строковоый тип данных

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "str":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" Строковый тип данных (str) встречался в примерах так же часто,
как и числа. Строка — это последовательность символов, включая пробел, знаки препинания, цифры и т. д. Например, сообщения в социальных сетях имеют строковый тип данных.
Примеры: '1', 'Имя2000', '_ _ _'. """)
              
        print("")
        print ("""Напиши строковоый тип данных


Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))



time.sleep(1)
print ("|" * 7)
print ("")
print ("""При какм опреаторе (and или or), каждое заданное
условие должно быть истинным? 

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "and":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" При использовании оператора and (логическое И) каждое из условий 
должно быть истинным. Только в этом случае будет выполняться действие,
заложенное в результат условной конструкции. """)
              
        print("")
        print ("""При какм опреаторе (and или or), каждое заданное
условие должно быть истинным? 


Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 8)
print ("")
print ("""При какм опреаторе (and или or), будет выполняться
только одно заданное условие? 

Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "or":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" При использовании оператора or (логическое ИЛИ) необходимо,
чтобы выполнялось хотя бы одно из заданных условий. """)
              
        print("")
        print ("""При какм опреаторе (and или or), каждое заданное
условие должно быть истинным? 


Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 9)
print ("")
print ("""Сколько раз повторится данный цикл?

for n in range(1, 21):
    print(n)


Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "20":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" Вывод на экран содержимого переменной n,
которое меняется после каждой итерации на следующее число диапазона,
созданного с помощью функции range().. 

Функция range(1, 21) в данном коде представляет собой
список целых чисел от 1 до 21, включая 1 и не включая 21,
т. е. следующий набор чисел1:
[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]

Количество итераций: 20


""")
              
        print("")
        print ("""При какм опреаторе (and или or), каждое заданное
условие должно быть истинным? 


Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))



time.sleep(1)
print ("|" * 10)
print ("")
print ("""Стоит также отметить, что range() — самостоятельная функция и используется
не только в циклах. Поэтому рассмотрим ее подробнее:

1) В общем случае функция range() имеет три аргумента:
range(от …, до … не включая, с шагом …).

2) Если предъявлен только один аргумент функции,
то 
первый аргумент принимается за ноль,
второй — за введенный, а 
третий — за единицу, 
т. е. range(A) то же самое, что
range(0, A, 1)

3) Если последний аргумент из трех не прописывается,
то он автоматически принимается за единицу, т. е. range(A, B) то же
самое, что range(A, B, 1)

Вроде сложно...
Вот пример сразу понятнее станет:

range(5) это от 0, до 5 не включая,с шагом 1 [0, 1, 2, 3, 4]
range(1, 4) это от 1, до 4 не включая, с шагом 1 [1, 2, 3]
range(–1, 5, 1) это от –1, до 5 не включая, с шагом 1 [–1, 0, 1, 2, 3, 4]
range(–2, 8, 2) это от –2, до 8 не включая, с шагом 2 [–2, 0, 2, 4, 6]
range(8, 0, –3) это от 8, до 0 не включая,с шагом –3 [8, 5, 2]

Для продолжения набери команду next
Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "next":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" тут ничего нет

""")
              
        print("")
        print ("""Стоит также отметить, что range() — самостоятельная функция и используется
не только в циклах. Поэтому рассмотрим ее подробнее:

1) В общем случае функция range() имеет три аргумента:
range(от …, до … не включая, с шагом …).

2) Если предъявлен только один аргумент функции,
то 
первый аргумент принимается за ноль,
второй — за введенный, а 
третий — за единицу, 
т. е. range(A) то же самое, что
range(0, A, 1)

3) Если последний аргумент из трех не прописывается,
то он автоматически принимается за единицу, т. е. range(A, B) то же
самое, что range(A, B, 1)

Вроде сложно...
Вот пример сразу понятнее станет:

range(5) это от 0, до 5 не включая,с шагом 1 [0, 1, 2, 3, 4]
range(1, 4) это от 1, до 4 не включая, с шагом 1 [1, 2, 3]
range(–1, 5, 1) это от –1, до 5 не включая, с шагом 1 [–1, 0, 1, 2, 3, 4]
range(–2, 8, 2) это от –2, до 8 не включая, с шагом 2 [–2, 0, 2, 4, 6]
range(8, 0, –3) это от 8, до 0 не включая,с шагом –3 [8, 5, 2]

Для продолжения набери команду next


Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 11)
print ("")
print ("""Перед вам цикл for

for n in range(1, 10, 1):
    print(n)

В формате
123
тоесть цифры без пробелов 
первое число от какого числа начинается цикл
второе до какого числа будет идти цикл соотвественно не включая его
третья с каким шагом




Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "1101":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" ответ 1101


""")
              
        print("")
        print ("""Перед вам цикл for

for n in range(1, 10, 1):
    print(n)

В формате
123
тоесть цифры без пробелов 
первое число от какого числа начинается цикл
второе до какого числа будет идти цикл соотвественно не включая его
третья с каким шагом

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))


time.sleep(1)
print ("|" * 12)
print ("")
print ("""Смотри дальше

- Инструкция for i in range(1, 21) читается
следующим образом: «для i в диапазоне от 1 до 21 не включая».

- Механизм цикла таков,
что переменной i присваивается начальное значение (в данном случае 1)

В Python возможности переменной-счетчика несколько шире,
чем в других языках программирования, благодаря оператору in,
который фактически может «положить» в нее любые значения
и объекты. Для примера рассмотрим программу, которая определяет,
 содержит ли введенное слово букву «к»:

a = input('Введите слово: ')
for i in a:
    if i == 'к':
        print('В этом слове есть буква "к"')

Такой алгоритм будет перебирать все символы строки a,
проверяя, является ли он искомым, т. е. «к». При этом каждый
символ строки будет помещаться в переменную-счетчик i.
В дальнейшем мы будем применять этот прием при работе со
многими структурами данных.



Для продолжения набери next
Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "next":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" ответ 1101


""")
              
        print("")
        print ("""тут ничего нет

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))

time.sleep(1)
print ("|" * 13)
print ("")
print ("""Так же  циклах есть 2 оперетаора

1) continue - хоть перевсти и можно как продолжить, значит он
пропустить шаг
пример:

for a in range(11):
    if a == 5 or a == 8:
        continue
    print(a)

В данном цикле он пропустит цифры соотественно 5 и 8

2) break - досрочное завершение цикла, я использую этот
 опертаор в этом коде

пример
a = 0
while True:
    a = a + 1
    if a == 6:
        break
    print(a)

Тоесть цикл будет считать (работать) до шести и прервёт работу кода
Важно понимать приведен пример организации бесконечного цикла: условие
всегда истинно (True).




Для продолжения набери next
Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "next":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" ответ next


""")
              
        print("")
        print ("""тут ничего нет

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))

time.sleep(1)
print ("|" * 14)
print ("")
print (""" Моя любимая шука random
Заметьте, функция randint() содержит в своем названии сочетание букв «int»,
randrange() — «range», поэтому несложно
запомнить, за что отвечают эти функции.


random.randint(A,B) -  Возвращает псевдослучайное
целое число из луча от А до В (не включая В)


random.randrange(B) Возвращает псевдослучайное
число из последовательности целых чисел от 1 до В (не
включая В)

random.choice(sequence) - случайный элемент непустой последовательности,
например спика

random.shuffle() - шейкер для списков

напиши команду "рандомраендж" что бы вевело случаеное число от 1 до 10
и вывело на экран


Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "random.randrange(1, 11)":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" random.randrange(1, 11)"


""")
              
        print("")
        print ("""тут ничего нет

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз, ты забыл про кавычки бро")
        answer_1 = str(input("Enter your answer: "))

time.sleep(1)
print ("|" * 15)
print ("")
print ("""Напиши команду которая выводит слчайное число
от 1 до 10 используя рендинт


Для справки введи комманду:help  
""")
answer_1 = str(input("Enter your answer: "))
while (True):
    if answer_1 == "random.randint(1, 10)":
        print("Это правельный ответ, поехали дальше")
        break
    if answer_1 == 'help':
        print(""" random.randint(A,B) 
        


""")
              
        print("")
        print ("""

Для справки введи комманду:help  """)
        answer_1 = str(input("Enter your answer: "))
    else:
        print("Попробуй ещё раз")
        answer_1 = str(input("Enter your answer: "))


